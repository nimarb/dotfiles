# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term terminology
# set $term gnome-terminal
set $term alacritty
for_window [app_id="^floaty-term"] floating enable

# Your preferred application launcher
# The commended out launcher works without `sway-launcher-desktop` in PATH
#set $menu exec alacritty --class 'launcher' --command bash -c 'compgen -c | sort -u | fzf | xargs -r swaymsg -t command exec'
#for_window [app_id="^launcher$"] floating enable, border none, resize set width 25 ppt height 100 ppt, move position 0 px 0 px

# More elaborate launcher
set $menu exec alacritty --class 'launcher' --command env TERMINAL_COMMAND="alacritty --command" sway-launcher-desktop
for_window [app_id="^launcher$"] floating enable, border pixel 5, sticky enable, resize set width 25 ppt height 100 ppt, move position 0 px 0 px


# Images
set $desk_bg ~/pictures/desk_bg.jpg
set $lock_bg ~/pictures/lock_bg.jpg

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/sway/)
#output * bg /usr/share/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

#output eDP-1 scale 2
output eDP-1 {
    scale 1.25
    scale_filter linear
}

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1267:32:Elan_Touchpad" {
    tap enabled
    tap_button_map lrm
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term --class 'floaty-term'

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d $menu

    # take a screenshot of a part of the screen
    bindsym $mod+Shift+s exec slurp | grim -g - - | wl-copy && wl-paste > ~/screenshots/$(date +'%Y-%m-%d-%H%M%S_grim.png')
    # take a screenshot of a part of the screen and annotate it with swappy
    bindsym $mod+Shift+Ctrl+s exec slurp | grim -g - - | swappy -f - -o - | wl-copy && wl-paste > ~/screenshots/$(date +'%Y-%m-%d-%H%M%S_grim_annotated.png')
    # open a selector and copy the hex colour code at the clicked location
    bindsym $mod+c exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exit

    # lock the screen
    bindsym $mod+o exec swaylock -i $lock_bg --scaling=fill

    # start the program to manage displays (e.g. for a projector)
    bindsym $mod+p exec wdisplays

#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left exec swaymsg focus left && swaymsg 'border pixel 5' && sleep .2 && swaymsg 'border pixel 2'
    # bindsym $mod+$down exec swaymsg focus down && swaymsg 'border pixel 5' && sleep .2 && swaymsg 'border pixel 2'
    # bindsym $mod+$up exec swaymsg focus up && swaymsg 'border pixel 5' && sleep .2 && swaymsg 'border pixel 2'
    # bindsym $mod+$right exec swaymsg focus right && swaymsg 'border pixel 5' && sleep .2 && swaymsg 'border pixel 2'
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Up focus up
    bindsym $mod+Down focus down

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Down move down
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+Left workspace prev
    bindsym $mod+Right workspace next
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+Left move container to workspace prev
    bindsym $mod+Shift+Right move container to workspace next
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # move the current workspace to a different screen (left/right/up/down)
    bindsym $mod+Ctrl+Left move workspace to output left
    bindsym $mod+Ctrl+Right move workspace to output right
    bindsym $mod+Ctrl+Up move workspace to output up
    bindsym $mod+Ctrl+Down move workspace to output down

    # move all workspaces to a different screen (left/right/up/down)
    bindsym $mod+Shift+Ctrl+Left move workspace to output left
    bindsym $mod+Shift+Ctrl+Right move workspace to output right
    bindsym $mod+Shift+Ctrl+Up move workspace to output up
    bindsym $mod+Shift+Ctrl+Down move workspace to output down

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    #bindsym $left resize shrink width 10 px or 10 ppt
    #bindsym $down resize grow height 10 px or 10 ppt
    #bindsym $up resize shrink height 10 px or 10 ppt
    #bindsym $right resize grow width 10 px or 10 ppt
    bindsym $left resize shrink width 10 px
    bindsym $down resize grow height 10 px
    bindsym $up resize shrink height 10 px
    bindsym $right resize grow width 10 px

    # ditto, with arrow keys
    #bindsym Left resize shrink width 10 px or 10 ppt
    #bindsym Down resize grow height 10 px or 10 ppt
    #bindsym Up resize shrink height 10 px or 10 ppt
    #bindsym Right resize grow width 10 px or 10 ppt
    bindsym Left resize shrink width 10 px
    bindsym Down resize grow height 10 px
    bindsym Up resize shrink height 10 px
    bindsym Right resize grow width 10 px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Volume controls
#

# bindings for pipewire / pulseaudio
    bindsym XF86AudioLowerVolume exec pactl -- set-sink-mute @DEFAULT_SINK@ 0 && pactl -- set-sink-volume @DEFAULT_SINK@ -1%
    bindsym XF86AudioRaiseVolume exec pactl -- set-sink-mute @DEFAULT_SINK@ 0 && pactl -- set-sink-volume @DEFAULT_SINK@ +1%
    bindsym XF86AudioMute exec pactl -- set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl -- set-source-mute @DEFAULT_SOURCE@ toggle

# bindings for ALSA only
    # bindsym XF86AudioRaiseVolume exec amixer -q set Master 1%+ unmute
    # bindsym XF86AudioLowerVolume exec amixer -q set Master 1%- unmute
    # bindsym XF86AudioMute exec amixer -q set Master toggle

#
# Music Player controls
#
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    bindsym $mod+Next exec playerctl next
    bindsym $mod+Prior exec playerctl previous
#
# Brightness controls
#

    bindsym XF86MonBrightnessUp exec brightnessctl set +10%
    bindsym XF86MonBrightnessDown exec brightnessctl set 10%-

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# showing window title in swaybar:
#   swaymsg -t subscribe -m '["window"]' | jq -r '.container.name'
#
# Disable title bars of window
default_border pixel 2

bar {
    position top
    swaybar_command waybar
}

include /etc/sway/config.d/*

#output "*" background /home/nb/Sonnenuntergang-dez16-hh.jpg fill


#
# Autostart of programs
#
    exec mako
    # executes gammastep with manual location check. if no network is
    # available, default to munich as location
    exec gammastep-indicator -l $(if [[ ! $(curl -s -S --fail "ipinfo.io") ]]; then echo "48.14:11.58"; else echo $(curl -s ipinfo.io | jq -j .loc | tr ',' ':'); fi)
    exec nm-applet --indicator
    exec swayidle -w \
	timeout 300 'swaylock -f -i $lock_bg --scaling=fill' \
	timeout 600 'swaymsg "output * dpms off"' \
	    resume 'swaymsg "output * dpms on"' \
	before-sleep 'swaylock -f -i $lock_bg --scaling=fill' \
	lock 'swaylock -f -i $lock_bg --scaling=fill'
    exec swaybg -i $desk_bg -m fill
    exec kanshi
